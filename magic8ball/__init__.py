# This file is part of the Troopers 19 Badge project, https://troopers.de/troopers19/
#
# The BSD 3-Clause License
#
# Copyright (c) 2019 "Wojtek Przibylla" (@br3zel)
# All Credit to Malte Heinzelmann (@hnzlnn)
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import display
import time
import random

from system import app, screen, Kernel


class ModeScreen(screen.Screen):
    ACTION_YESNO    = 0
    ACTION_PENTEST  = 1
    ACTION_QUOTES   = 2
    ACTION_TITLE    = 3
    ACTION_SIMPSONS = 4
    ACTION_FUTURAMA = 5
    ACTION_SCHNEIER = 6

    MENU_ITEMS = [
        {'text': 'Chose your Mode of operation:', 'action': ACTION_TITLE},
        {'text': 'Yes/No', 'action': ACTION_YESNO},
        {'text': 'Pentest', 'action': ACTION_PENTEST},
        {'text': 'Quotes', 'action': ACTION_QUOTES},
        {'text': 'Simpsons', 'action': ACTION_SIMPSONS},
        {'text': 'Futurama', 'action': ACTION_FUTURAMA},
        {'text': 'BruceSchneier', 'action': ACTION_SCHNEIER},
    ]
    
    def register(self):
        self.kernel.lights.brightness(.05)
        random.seed(sum(self.kernel.RTC.datetime()))
        
    def on_menu_selection(self, item):
        self.screens[1].RENDER = True
        self.app.font = display.FONT_DEJAVU_24
        if item['action'] == self.ACTION_YESNO:
            self.app.color=lambda:(0, 143, 17)
            self.app.font=display.FONT_DEJAVU_24            
            self.app.answers = [
                "Not so sure",
                "42",
                "Most likely",
                "Absolutely\n not",
                "Outlook is good",
                "I see good\n things happening",
                "DO IT!",
                "Never",
                "Negative",
                "Could be",
                "Unclear,ask again",
                "Yes",
                "No",
                "Possible,\n but not\n probable"
            ]
            self.app.image = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/8AAAAAAAAAAAAAAAAD///8AAAAAAAAAAAAAAAf////gAAAAAAAAAAAAAD/////8AAAAAAAAAAAAAP//////AAAAAAAAAAAAA///////4AAAAAAAAAAAD///////8AAAAAAAAAAAP////////AAAAAAAAAAAf////////gAAAAAAAAAB/////////4AAAAAAAAAD/////////8AAAAAAAAAH/////////+AAAAAAAAAP//////////gAAAAAAAA/4H////////wAAAAAAAB/gH////////4AAAAAAAD/AH////////8AAAAAAAD+AH////////8AAAAAAAH8AP////////+AAAAAAAP4AP/////////AAAAAAAfwAf/////////gAAAAAA/gAf/////////wAAAAAA/AA//////////wAAAAAB/AB//////v///4AAAAAD+AB/////gAP//8AAAAAD8AD////8AAD//8AAAAAH8AH////wAAA//+AAAAAH4AH////gAAAP/+AAAAAP4AP///+AAAAH//AAAAAPwAf///8AAAAD//AAAAAfwAf///4AAAAB//gAAAAfgA////wAAAAA//gAAAA/gA////wAAAAAf/wAAAA/AB////gAA/AAP/wAAAA/AB////AAH/wAP/wAAAB/AD////AAP/4AH/4AAAB+AD///+AAfj4AH/4AAAB+AH///+AAeA8AD/4AAAB+AH///8AA8A8AD/4AAAD8AP///8AA8A8AD/8AAAD8AP///8AA8AcAB/8AAAD8AP///4AA8A8AB/8AAAD8Af///4AAcA4AB/8AAAD4Af///4AAeB4AB/8AAAH4Af///4AAP/wAB/+AAAH4A////4AAH/8AB/+AAAH4A////4AAB/+AB/+AAAH4B////4AAHwfAB/+AAAH4B////4AAHAPAB/+AAAH4B////4AAPAHgB/+AAAH8D////4AAOAHgB/+AAAH8D////8AAOAHgB/+AAAH8H////8AAOAHgB/+AAAH+H////8AAPAHgD/+AAAH//////8AAPAPAD/+AAAH//////+AAHgfAD/+AAAD//////+AAH/+AH/8AAAD///////AAD/8AH/8AAAD///////AAA/gAP/8AAAD///////gAAAAAf/8AAAD///////wAAAAAf/8AAAD///////4AAAAA//4AAAB///////4AAAAB//4AAAB///////8AAAAD//4AAAB////////AAAAH//4AAAA////////gAAAP//wAAAA////////4AAA///wAAAA////////8AAD///wAAAAf////////wAf///gAAAAf//////////////gAAAAP//////////////AAAAAP//////////////AAAAAH/////////////+AAAAAH/////////////+AAAAAD/////////////8AAAAAD/////////////8AAAAAB/////////////4AAAAAA/////////////wAAAAAA/////////////wAAAAAAf////////////gAAAAAAP////////////AAAAAAAH///////////+AAAAAAAD///////////8AAAAAAAD///////////8AAAAAAAB///////////4AAAAAAAA///////////wAAAAAAAAf//////////AAAAAAAAAH/////////+AAAAAAAAAD/////////8AAAAAAAAAB/////////4AAAAAAAAAAf////////gAAAAAAAAAAP////////AAAAAAAAAAAD///////8AAAAAAAAAAAB///////wAAAAAAAAAAAAP//////AAAAAAAAAAAAAD/////8AAAAAAAAAAAAAAf////gAAAAAAAAAAAAAAD///8AAAAAAAAAAAAAAAAD/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'

            return Kernel.ACTION_LOAD_SCREEN, 1

        #Pentestquotes
        if item['action'] == self.ACTION_PENTEST:
            self.app.color=lambda:((0, 255, 0) if random.randint(0,1)==0 else (255,0,0))
            self.app.font=display.FONT_DEJAVU_12
            self.app.image = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADgAA4AAAAAAAAAAAPwAAPwAD+AAD+AAAAAAAf8AAf8AH/AAH/AAAAAAA88AA88APngAPngAAAAABwOABwOAODwAODwAAAAABwGABwOAcBwAcBwAAAAABwGABgGAcBwAcBwAAAAABwGABgGAcBwAcBwAAAAABwGABwGAcBwAcBwAAAAABwOABwOAOBwAODwAAAAAA8eAA8cAPHgAPHgAAAAAA/8AA/8AH/AAH/AAAAAAAP4AAP4AD+AAD+AAAAAAAHgAAAAAAAAAA4AAAAAAADAAAAAAAAAAA4AAAAAAADAAAAAAAAAAA4AAAAAAADAAAAAAAAAAA4AAAAAAADAAAAAAAAAAA4AAAAAAADAAAAH/4AAAA4AAAAAAADgAAAP/+AAAA4AAAAAAADgAAA///AAAA4AAAAAAADgAAB4AHwAAA4AAAAAAADgAADwABwAAA4AAAAAAADgAADgAA4AAA4AAAAAAADgAAHAAAcAAA4AAAAAAADgAAHAAAcAABwAAAAAAABwAAOAAAcAADwAAAAAAAA8AAOAAAOAAHgAAAAAAAAf/gOAAAOA//AAAAAAAAAP/gOAAAOA/+AAAAAAAAAD/gOAAAOA/4AAAAAAAAAAAAOAAAOAAAAAAAAAAAAAAAOAAAOAAAAAAAAAAAAAAAOAAAOAAAAAAAAAAAAAAAOAAAOAAAAAAAAAfAAAAAf////AAAAA/AAB/wAAAA/////gAAAB/gAD/4AAAB/////wAAAD/wADg4AAABwAAABwAAAHg4AHAcAAABgAAABwAAAHAYAHAf///hgAAABw////AcAHAf///hgAAABw////AcAHAf///hgAAABw////AcAHA8AAABgAMABwAAAHA4ADh4AAABgAfABwAAADh4AB/wAAABgA/ABwAAAD/wAA/gAAABgA/ABwAAAA/gAAOAAAABgAfABwAAAAeAAAAAAAABgAfABwAAAAAAAAAAAAABgAOABwAAAAAAAAAAAAABgAOABwAAAAAAAAAAAAABgAOABwAAAAAAAAAAAH/hgAOABw/8AAAAAAAAAf/hgAOABw/+AAAAAAAAA//hgAOABw//gAAAAAAAB4ABgAOABwADgAAAAAAABwABgAAABwABwAAAAAAADgABgAAABwABwAAAAAAADgABgAAABwAA4AAAAAAADgABgAAABwAA4AAAAAAADgABgAAABwAA4AAAAAAADgABwAAABwAA4AAAAAAADgAB/////gAA4AAAAAAADgAA/////AAA4AAAAAAADAAAP///+AAA4AAAAAAADAAAAAAAAAAA4AAAAAAADAAAAAAAAAAA4AAAAAAADAAAAAAAAAAA4AAAAAAADgAAAAAAAAAA4AAAAAAAHwAAHgAB8AAB8AAAAAAAf4AAf4AD/AAD/AAAAAAA/8AA/8AH/gAH/gAAAAAB4eAB4eAODgAODgAAAAABwOABwOAcBwAcBwAAAAABwGABwGAcBwAcBwAAAAABwGABgGAcBwAcBwAAAAABwGABwGAcBwAcBwAAAAABwOABwOAcBwAcBwAAAAAB4eAB4eAODgAODgAAAAAA/8AA/8AH/gAH/gAAAAAAf4AAf4AD/AAD/AAAAAAAHwAAHwAB8AAB8AAAAAAAAAAADgAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAADAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'

            self.app.answers = []
            with open("/apps/magic8ball/pentest.txt", "r") as file:
                for line in file.readlines():
                    self.app.answers.append(line.replace("\\n","\n"))
           
            
            return Kernel.ACTION_LOAD_SCREEN, 1
        #RandomQuotes
        if item['action'] == self.ACTION_QUOTES:
            self.app.font=display.FONT_DEJAVU_12
            self.app.color=lambda:(255, 255, 255)
            self.app.image = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf////////////gAAAAAB/////////////4AAAAAH/////////////+AAAAAP//////////////AAAAAf//////////////gAAAA///////////////wAAAB///////////////wAAAB///////////////4AAAD///////////////4AAAD///////////////8AAAD///////////////8AAAH//Px///////////8AAAH/+Ph///////////8AAAH/8PB///////////8AAAH/4PB///////////8AAAH/4fH///////////8AAAH/4eH///////////8AAAH/4ex/8AAAH///////////+Px/8AAAH///////////8Ph/8AAAH///////////8PB/8AAAH///////////4OD/8AAAH///////////4eH/8AAAH///////////4+H/8AAAD///////////7+f/8AAAD///////////////4AAAD///////////////4AAAB///////////////4AAAB///////////////wAAAA///////////////gAAAAf//////////////gAAAAP//////////////AAAAAH/////////////8AAAAAB/////////////wAAAAAAP///////////+AAAAAAAAH//AAAAAAAAAAAAAAAAAH/+AAAAAAAAAAAAAAAAAP/4AAAAAAAAAAAAAAAAAP/wAAAAAAAAAAAAAAAAAf/AAAAAAAAAAAAAAAAAAf+AAAAAAAAAAAAAAAAAA/4AAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAB/gAAAAAAAAAAAAAAAAAB+AAAAAAAAAAAAAAAAAAB8AAAAAAAAAAAAAAAAAADwAAAAAAAAAAAAAAAAAADgAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
            
            self.app.answers = []
            with open("/apps/magic8ball/quotes.txt", "r") as file:
                for line in file.readlines():
                    self.app.answers.append(line.replace("\\n","\n"))

            return Kernel.ACTION_LOAD_SCREEN, 1

        #Simpsons
        if item['action'] == self.ACTION_SIMPSONS:
            self.app.font=display.FONT_DEJAVU_12
            self.app.color=lambda:(254, 217, 15)
            self.app.image = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/wAAAAAAAAAAAAAAAAA///AAAAAAAAAAAAAAAAP///wAAAAAAAAAAAAAAB////8AAAAAAAAAAAAAAH//4//AAAAAAAAAAAAAAf/gAB/gAAAAAAAAAAAAB/4AAAfwAAAAAAAAAAAAD/gAAAH8AAAAAAAAAAAAP8AAAAD8AAAAAAAAAAAAfwAAAAA+AAAAAAAAAAAA/gAAAAAfAAAAAAAAAAAB+AAAAAAPgAAAAAAAAAAD8AAAAAAPwAAAAAAAAAAD4AAAAAAHwAAAAAAAAAAHwAAAAAAD4AAAAAAAAAAPgAAAAAAB8AAAAAAAAAAPgAAAAAAB8AAAAAAAAAAfAAAAAAAA+AAAAAAAAAAfAAAAAAAA+AAAAAAAAAAeAAAAAAAAfAAAAAAAAAA+AAAAAAAAfAAAAAAAAAA8AAAAAAAAPAAAAAAAAAA8AAAAAAAAPgAAAAAAAAA8AAAAAAAAHgAAAAAAAAA8AAAAAAAAHwAAAAAAAAB8AAAAAAAAHwAAAAAAAAB8AAAAAAAAD4AAAAAAAAB8AAAAAAAAB4AAAAAAAAB8AAAAAAAAB8AAAAAAAAB8AAAAAAAAA8AAAAAAAAB8AAAAB8AAP8AAAAAAAAB8AAAAP/gB/8AAAAAAAAB8AAAA//4H/+AAAAAAAAA8AAAD//+P//gAAAAAAAA8AAAH///f//wAAAAAAAA8AAAP4A//gP4AAAAAAAA8AAAfgAP+AD4AAAAAAAA8AAAfAAH8AB8AAAAAAAA8AAA+AAD4AB8AAAAAAAA+AAA8AAD4AA8AAAAAAAAfwAB8AAB8AA+AAAAAAAAfwAB4AAB8AAeAAAAAAAD/4AB4AAA8DgeAAAAAAAH/8AB4AAA8DgeAAAAAAAH/8AB4GAA8Dg+AAAAAAAH/+AB4PAA8Dg+AAAAAAAH/+AB4PAA8AA8AAAAAAAH//AB4PAA8AB8AAAAAAAH//gB4AAA8AD8AAAAAAAH//gB8AAB///4AAAAAAAH//wA8AAB///wAAAAAAAH/zwA+AAD///gAAAAAAAH/z4AfAAH///gAAAAAAAHvx4AfgAPwAPwAAAAAAAHnx4APwAfgADwAAAAAAAHjwAAH8D/AADwAAAAAAAHjwAAD//+AAD4AAAAAAAHhgAAB//8AAD4AAAAAAAHgAAAAf/wAAD4AAAAAAADgAAAAD+AAAHwAAAAAAAAAAAAAAAAAAfwAAAAAAAAB/gAAAAA///wAAAAAAAAD/wAAAAP///4AAAAAAAAH/4AAAB////4AAAAAAAAP/4AAAH///x8AAAAAAAAPh4AAAf/wAA8AAAAAAAAPA4AAA/8AAA+AAAAAAAAPAAAAB/gAAAeAAAAAAAAPAAAAD+AAAAfAAAAAAAAPAAAAH4AAAAPgAAAAAAAPgAAAPwAAAAPgAAAAAAAH4AAAfAAAAAHwAAAAAAAH/gAA+AAAAAD4AAAAAAAD/gAA+AAAAAD4AAAAAAAA/gAB8AAAAAB4AAAAAAAAPgAB4AAAAAB4AAAAAAAAHgAD4AAAAAB4AAAAAAAAHgADwAAAAAD4AAAAAAAAHgADwAAAAAH4AAAAAAAAHgAHwDAAAAfwAAAAAAAAHgAHwH8AAD/gAAAAAAAAHgAHgH/////AAAAAAAAAHgAHgH////8AAAAAAAAAHgAHgB////wAAAAAAAAAHgAHwAP///AAAAAAAAAAPgAHwAAB/fAAAAAAAAAAPgADwAAAAfAAAAAAAAAAPgADwAAAA+AAAAAAAAAAPAAD4AAAB+AAAAAAAAAAPAAB4AAAD8AAAAAAAAAAPAAB8AAAH4AAAAAAAAAAPAAA+AAAHwAAAAAAAAAAPAAA/AAAPgAAAAAAAAAAPAAAfgAA/AAAAAAAAAAAfAAAP8AD+AAAAAAAAAAAeAAAH///8AAAAAAAAAAAeAAAD///4AAAAAAAAAAAeAAAA///wAAAAAAAAAAAeAAAAH//gAAAAAAAAAAA+AAAAAAPgAAAAAAAAAAAcAAAAAAHgAAAAAAAAAAAcAAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
            
            self.app.answers = []
            with open("/apps/magic8ball/simpsons.txt", "r") as file:
                for line in file.readlines():
                    self.app.answers.append(line.replace("\\n","\n"))

            return Kernel.ACTION_LOAD_SCREEN, 1

        #Futurama
        if item['action'] == self.ACTION_FUTURAMA:
            self.app.font=display.FONT_DEJAVU_12
            self.app.color=lambda:(161,95,169)
            self.app.image = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAAAAAAAAAA/8AAAAAAAAAAAAAAAAAB8+AAAAAAAAAAAAAAAAABwPAAAAAAAAAAAAAAAAADgHAAAAAAAAAAAAAAAAADgDAAAAAAAAAAAAAAAAADADAAAAAAAAAAAAAAAAADADAAAAAAAAAAAAAAAAADADAAAAAAAAAAAAAAAAADgHAAAAAAAAAAAAAAAAADwPAAAAAAAAAAAAAAAAAB4eAAAAAAAAAAAAAAAAAA88AAAAAAAAAAAAAAAAAAc4AAAAAAAAAAAAAAAAAAMwAAAAAAAAAAAAAAAAAAMwAAAAAAAAAAAAAAAAAAMwAAAAAAAAAAAAAAAAAAc4AAAAAAAAAAAAAAAAAAc4AAAAAAAAAAAAAAAAAAYYAAAAAAAAAAAAAAAAAAYYAAAAAAAAAAAAAAAAAAYYAAAAAAAAAAAAAAAAAAYYAAAAAAAAAAAAAAAAAAYYAAAAAAAAAAAAAAAAAAYYAAAAAAAAAAAAAAAAAAYYAAAAAAAAAAAAAAAAAB4eAAAAAAAAAAAAAAAAA/4f8AAAAAAAAAAAAAAAD/gH/AAAAAAAAAAAAAAAPwAAPwAAAAAAAAAAAAAAfAAAD4AAAAAAAAAAAAAB8AAAA+AAAAAAAAAAAAAD4AAAAfAAAAAAAAAAAAAHgAAAAHgAAAAAAAAAAAAHAAAAADgAAAAAAAAAAAAOAAAAABwAAAAAAAAAAAAeAAAAAB4AAAAAAAAAAAAcAAAAAA4AAAAAAAAAAAA4AAAAAAcAAAAAAAAAAAA4AAAAAAcAAAAAAAAAAABwAAAAAAOAAAAAAAAAAABwAAAAAAOAAAAAAAAAAABgAAAAAAGAAAAAAAAAAABgAAAAAAGAAAAAAAAAAABgAAAAAAGAAAAAAAAAAADgAAAAAAHAAAAAAAAAAADgAAAAAAHAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAAHAAAAAAADgAAAAAAAAAAfAAAAAAAD4AAAAAAAAAA+AAAAAAAB8AAAAAAAAAB4AAAAAAAAeAAAAAAAAADw///////8PAAAAAAAAAHj////////HgAAAAAAAAHHg/+AB/8HjgAAAAAAAAOOB/+AB/+BxwAAAAAAAAOcD//gD//A5wAAAAAAAAMYH//gH//gYwAAAAAAAAM4H//wP//gcwAAAAAAAAM4P//4P//wcwAAAAAAAAM4P4P4fwPwMwAAAAAAAAM4PwH4fgPwMwAAAAAAAAM4PwH4fgPwMwAAAAAAAAM4PwH4fgPwMwAAAAAAAAM4PwH4fgPwMwAAAAAAAAM4PwH4fgPwMwAAAAAAAAM4P4P4fwfwMwAAAAAAAAM4P//wP//wcwAAAAAAAAMYH//wP//gcwAAAAAAAAMYD//gH//AYwAAAAAAAAOcB//AD/+A5wAAAAAAAAOOA/+AB/8BxwAAAAAAAAHH////////jgAAAAAAAAHj////////HgAAAAAAAADwf//////4PAAAAAAAAAB4AAAAAAAAeAAAAAAAAAA+AAAAAAAB8AAAAAAAAAAfAAAAAAAD4AAAAAAAAAAHAAAAAAADgAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAw+Mx8MDAAAAAAAAAAADDw+Px8PDAAAAAAAAAAADHw+Px8PjAAAAAAAAAAADHw+Px8PjAAAAAAAAAAADHw+Px8PjAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADBw+Px8ODAAAAAAAAAAADAw+Px8MDAAAAAAAAAAADAA+Px8ADAAAAAAAAAAADAA+Px8ADAAAAAAAAAAADAAGPxgADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADAAAAAAADAAAAAAAAAAADgAAAAAAHAAAAAAAAAAAD8AAAAAAfAAAAAAAAAAAB/gAAAAH+AAAAAAAAAAAAP/AAAD/4AAAAAAAAAAAAB/////+AAAAAAAAAAAAAAD////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
            
            self.app.answers = []
            with open("/apps/magic8ball/futurama.txt", "r") as file:
                for line in file.readlines():
                    self.app.answers.append(line.replace("\\n","\n"))

            return Kernel.ACTION_LOAD_SCREEN, 1

            #Schneier
        if item['action'] == self.ACTION_SCHNEIER:
            self.app.font = display.FONT_DEJAVU_12
            self.app.color = lambda: (100, 100, 100)
            self.app.imagewAAAAAAAAAAAAAAAAAB//AAAAAAAAAAAAAAAAAD//wAAAAAAAAAAAAAAAAD//4AAAAAAAAAAAAAAAAf//8AAAAAAAAAAAAAAAAP//+AAAAAAAAAAAAAAAAH///AAAAAAAAAAAAAAAAf///AAAAAAAAAAAAAAAD////AAAAAAAAAAAAAAAP////AAAAAAAAAAAAAAAP////AAAAAAAAAAAAAAAH/v//AAAAAAAAAeAAAAAB4P/+AAAAAAAAA/AAAAAB8//+AAAAAAAHwfAAAAAB8//+AAAAAAAH4PAAAwAAkh/+AAAAAAAD8HgAB4AAAAH/AAAAAAAB+HgAB4AAAAH/AAAAAAAA+DwAD4AAAAP/AAAAAAAAfDwADwAAAAP9AAAAAAAAPjwADwAABwc+AAAAAAAAPzwAHgAADwc+AAAAAAAAH5gAPgAAAAB8AAAAAAAAH5gAPgAAAAB8AAAAAAAAH5wAPgAAP8D8AAAAAPAAD4wADAAAIOH8AAAAAfgAA44AAAAAAAP4AAAAAPwAA44AIAAAAAf4AAAAAH4AA8IAAAAAAA/8AAAAAB8AA4AAAAAAAB/8AAAAAA+AAAAAAAAAAH/8AAAAAAfgAAAAAAAACP/4AAAAAAPwAAAAAAAABv/8AAAAAAH4AAAAAAAAA//8AAAAAAD8AAAAAAAADf/+AAAAAAA8AAAAAAAAH//+AAAAAAAeAAAAAAAA////AAAAAAAOAAAAAAAD////AA4AAAAH4ABAQAAAf/8fA8DAAAADjwDhwAAx//gAAAAwAAABj4/H4AA///Bg4AAcAAAAj5//4ADH//8B8AAcAAAAX///4A+f//4f/AAOAAAAf///IB/P//9//AAPAAAAf///ABD//////yAHAAAAP///AAf////+D/AHAAAAP///AD/////wB/gDAAAAP//9AB/////4A/gDAAAAH//4AA/////4ADwDAAAAH//wAAf////8GDwCAAAAD//wAAH////8OB4AAAAAD//wAAD////8fAAAAAAAB//wAAAf///8PAAAAAAAB//gAAAD///8OAAAAAAAA//gAAAB///+OAAAAAAAAP/4AAAA////+AAAAAAAAH/8AgAAf///+AAAAAAAAD//nwAAP///+AAAAAAAAB////AAP///+AAAAAAAAA///wIAP///+AAAAAAAAAP/8AMAP///+AAAAAAAAAH/4AOAP///+AAAAAAAAAH/4APB////+AAAAAAAAAH/xgP3////+AAAAAAAAAD/4gP/////8AAAAAAAAAD/8wP/////8AAAAAAAAAB/8AP/////8AAAAAAAAAB//gQD////8AAAAAAAAAA//AAD////8AAAAAAAAAAf/AAD////8AAAAAAAAAAHPAAB////8AAAAAAAAAAAMAAB////+AAAAAAAAAAAMAAB////+AAAAAAAAAAAEAAB////+AAAAAAAAAAAAAAB////+AAAAAAAAAAAAAAD////+AAAAAAAAAAAAAAD////+AAAAAAAAAAAAAAD////+AAAAAAAAAAAAAAD////+AAAA'

            self.app.answers = []
            with open("/apps/magic8ball/schneier.txt", "r") as file:
                for line in file.readlines():
                    self.app.answers.append(line.replace("\\n", "\n"))

            return Kernel.ACTION_LOAD_SCREEN, 1

class AnswerScreen(screen.Screen):
    RENDER  = True
    idx     = None
    mind    = None

    def update(self, delta=0):
        if self.accel.shake():
            self.RENDER = True
            self.app.loading="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/+AAAAAAAAAAAAAAf//////AAAAAAAAAAB////////+AAAAAAAAD//////////wAAAAAAH///////////8AAAAAH/////////////AAAAD//////////////gAAA//////+AD//////wAAH////8AAAAA/////wAA////wAAAAAAD////gAD///AAAAAAAAAf///AAP/+AAAAAAAAAAH//+AA/8AAAAAAAAAAAB//4AD+AAAAAAAAAAAAAf/gAP4AAAAAAAAAAAAAP+AA/wAAAAAAAAAAAAAP4AD/AAAAAAAAAAAAAB/gAP8AAAAAAAAAAAAAH+AA/wAAAAAAAAAAAAAf4AB/AOAAAAAAAAAAAB/AAH+AHgAAAAAAAAAAP8AAf4AHgAAAAAAAAAA/wAB/gADwAAAAAAAP4D/AAH+AADwAAAAAAP4AP4AAP8AADwAAAAAH4AB/gAA/wAADgAAAAB8AAH+AAD/AAAHgAAAAfAAAf4AAP8AAAHAAAAHgAAB/gAAfwAAAGAAAB4AAAP8AAB/gAAAMAAAMAAAA/wAAH+AAAAIAADAAAAD/AAAf4AAAAAAAAAAAAP4AAA/gAACAAAAAPwAB/gAAD/AAf/wAAAf/8AH+AAAP8AH//AAAA//8AfwAAA/wB+DwAAAA/D8B/AAAB/AfwMAAAAAYH8P8AAAH8B/MAAAAAAGfA/wAAAf4AAAAAAAAAAAD+AAAB/gAAAAAAAAAAAP4AAAD+AAAAAAAAAAAA/gAAAP4AAAAAAAAAAAH8AAAA/wAAAAAAAAAAAfwAAAB/AAAAAAAAAAAB/AAAAH8AAAAAAAAAAAH4AAAAfwAAAAAAAAAAA/gAAAA/AAAAAAAAAAAD+AAAAD+AAAAAAAAAAAPwAAAAP4AAAAAAAAAAA/AAAAAfgAAAAAAAAAAH8AAAAB+AAAAAAAAAAAfwAAAAH8AAAAAAAAAAB+AAAAAfwAAAAAAAAAAH4AAAAA/AAAAAAAAAAA/gAAAAD8AAAAAAAAAAD8AAAAAPwAAAAAAAAAAPwAAAAAfgAAAAAAAAAA/AAAAAB+AAAAAAAAAAH4AAAAAH4AAAAAAAAAAfgAAAAAfgAAAAAAAAAB+AAAAAA+AAAAAAAAAAHwAAAAAD8AAAAAAAAAAfAAAAAAPwAAAAAAAAAD8AAAAAAfAAAAAAAAAAPgAAAAAB8AAAD/+AAAA+AAAAAAHwAB////8AAD4AAAAAAPgD8AAAD/AAfAAAAAAA+B4AAAAAHgB8AAAAAAD4AeAAAAAAwHwAAAAAAPgAP8AAAAfAeAAAAAAAeAAD//7//AD4AAAAAAB8AAAP///AAPgAAAAAAD4AAAAAAAAB8AAAAAAAPwAAAAAAAAPgAAAAAAAfgAAAAAAAB+AAAAAAAA/AAAAAAAAPgAAAAAAAB+AAAAAAAB8AAAAAAAAB8AAAAAAAPgAAAAAAAAD4AAAAAAB8AAAAAAAAAHwAAAAAAPgAAAAAAAAAPgAAAAAB8AAAAAAAAAAfAAAAAAPgAAAAAAAAAA+AAAAAB8AAAAAAAAAAB8AAAAAPAAAAAAAAAAAD4AAAAB4AAAAAAAAAAAHwAAAAPAAAAAAAAAAAAHgAAAD4AAAAAAAAAAAAPAAAAfAAAAAAAAAAAAAeAAAB4AAAAAAAAAAAAA8AAAPAAAAAAAAAAAAAB4AAB4AAAAAAAAAAAAADwAAPAAAAAAAAAAAAAAHgABwAAAAAAAAAAAAAAPAAOAAAAAAAAAAAAAAAeABwAAAAAAAAAAAAAAA8AOAAAAAAAAAAAAAAAB4BwAAAAAAAAAAAAAAADgGAAAAAAAAAAAAAAAAHAwAAAAAAAAAAAAAAAAOHAAAAAAAAAAAAAAAAAc4AAAAAAAAAAAAAAAAAeAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=="
            self.display.fill(display.BACKGROUND)
            self.display.font(display.FONT_DEJAVU_12)
            
            self.display.image(self.app.loading, self.display.width//2-58, 6, 110, 110)
            self.display.text("EH, LEMME THINK", self.display.width//2-58, y=115, max_width=168, wrap=display.WRAP_INDENT, update=True)
            self.idx=random.randint(0, len(self.app.answers) - 1)
            wait=random.randint(2,10)
            for i in range (wait):
                self.mind = self.thinking(self.mind)
                time.sleep(.5)
            
    def thinking(self, state=None, direction=None):
        return self.marquee((lambda i: (255,0,0) if i%2 == 0 else (255,165,0)),state,direction)
    
    def colorize(self,color, state=None, direction=None):
        return self.marquee(lambda i: color,state,direction)
        
    def marquee(self,colorfn,state=None,direction=None):
        if state is None:
            state = (0, 1) # Marks the start of the LED
        if direction is not None:
            state = (state[0], int(direction))
        
        for i in range(self.lights.count):
            self.lights.set(colorfn(i), lights=(i + state[0]) % self.lights.count)
        return (state[0] + state[1]) % self.lights.count, state[1]
    
    def render(self):
        if self.RENDER:
            self.colorize(self.app.color())
            self.display.fill(display.BACKGROUND)
            self.display.font(self.app.font)
            
            if self.idx is None:
                space = 6
                size = self.display.text("SHAKE IT!", x=128, y=0, max_width=168 - space, wrap=display.WRAP_INDENT)
                self.display.fill(display.BACKGROUND)
                if self.app.image:
                    self.display.image(self.app.image, 6, 6, 116, 116)
                x = 168 // 2 - size['width'] // 2
                y = self.display.height // 2 - size['height'] // 2
                self.display.text("SHAKE IT!", x=128 + x, y=y, max_width=168 - space, wrap=display.WRAP_INDENT, update=True)
            else:
                space = 6
                size = self.display.text(self.app.answers[self.idx], x=128, y=0, max_width=168 - space, wrap=display.WRAP_INDENT)
                self.display.fill(display.BACKGROUND)
                if self.app.image:
                    self.display.image(self.app.image, 6, 6, 116, 116)
                x = 168 // 2 - size['width'] // 2
                y = self.display.height // 2 - size['height'] // 2
                self.display.text(self.app.answers[self.idx], x=120 + x, y=y, max_width=168 - space, wrap=display.WRAP_INDENT, update=True)
                       
            #changed to True
            self.RENDER = False

    def back(self, event):
        self.RENDER = True
        self.idx = None
        return Kernel.ACTION_LOAD_SCREEN, 0


class App(app.App):
    VERSION = 1

    screens = [
        ModeScreen(),
        AnswerScreen(continuous_rendering=True),
    ]
